{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","list","map","ingredient","listitems","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","exampleReq","process","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","keys","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAsBeA,EAnBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAML,MAArB,SAA6BA,IAC7B,oBAAGI,UAAWC,IAAMJ,SAApB,uBAAyCA,KACzC,qBAAKM,IAAKL,EAAOM,IAAKR,EAAOI,UAAWC,IAAMH,QAC9C,oBAAIE,UAAWC,IAAMI,KAArB,SAEQN,EAAYO,KAAI,SAACC,GACb,OACI,oBAAIP,UAAWC,IAAMO,UAArB,SAAiCD,EAAWE,gBCkDzDC,MA1Df,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGaJ,mBAAS,WAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAQPC,EAAU,0CAAsCF,EAAtC,mBAHDG,WAGC,oBAFAA,oCAKhBC,qBAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAML,GADZ,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAIjBb,EAAWa,EAAKC,MAJC,2CAAH,qDAkBhB,OACE,sBAAK3B,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAc4B,SAThB,SAACC,GACjBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMR,UACE,uBAAOgB,KAAK,OAAO/B,UAAU,aAAagC,MAAOlB,EAAQmB,SAf1C,SAACJ,GAEpBd,EAAUc,EAAEK,OAAOF,UAcf,wBAAQD,KAAK,SAAS/B,UAAU,gBAAhC,uBAEF,qBAAKA,UAAU,UAAf,SAEIY,EAAQN,KAAI,SAACJ,GACX,OACE,cAAC,EAAD,CACEiC,KAAMjC,EAAOA,OAAOkC,MACpBxC,MAAOM,EAAOA,OAAOkC,MACrBvC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,uBCzC5BsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,yBAAyB,MAAQ,sBAAsB,KAAO,qBAAqB,UAAY,6B","file":"static/js/main.dd9cafaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1 className={style.title}>{title}</h1>\r\n            <p className={style.calories}>Calories: {calories}</p>\r\n            <img src={image} alt={title} className={style.image} />\r\n            <ul className={style.list}>\r\n                {\r\n                    ingredients.map((ingredient) => {\r\n                        return (\r\n                            <li className={style.listitems}>{ingredient.text}</li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  const APP_ID = process.env.REACT_APP_API_ID\n  const APP_KEY = process.env.REACT_APP_API_KEY\n\n  const exampleReq = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n  // console.log(exampleReq);\n\n  useEffect(() => {\n    getRecipes()\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(exampleReq);\n    const data = await response.json();\n    // console.log(data.hits);\n    setRecipes(data.hits);\n  };\n  const updateSearch = (e) => {\n    // e.preventDefault;\n    setSearch(e.target.value);\n    // console.log(search);\n  };\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch} />\n        <button type=\"submit\" className=\"search-button\" >Search</button>\n      </form>\n      <div className=\"recipes\">\n        {\n          recipes.map((recipe) => {\n            return (\n              <Recipe\n                keys={recipe.recipe.label}\n                title={recipe.recipe.label}\n                calories={recipe.recipe.calories}\n                image={recipe.recipe.image}\n                ingredients={recipe.recipe.ingredients}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1YymR\",\"title\":\"recipe_title__1dh7J\",\"calories\":\"recipe_calories__3nDd7\",\"image\":\"recipe_image__1jn24\",\"list\":\"recipe_list__5-j5g\",\"listitems\":\"recipe_listitems__3pVNj\"};"],"sourceRoot":""}